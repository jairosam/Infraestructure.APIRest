// <auto-generated />
using System;
using Infraestructure.API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestructure.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Infraestructure.API.Models.Ciudad", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Ciudad");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Colaborador", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("emprendimientoid")
                        .HasColumnType("int");

                    b.Property<int>("fkEmprendimiento")
                        .HasColumnType("int");

                    b.Property<string>("identificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("emprendimientoid");

                    b.ToTable("Colaborador");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Emprendimiento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("fkUsuario")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("objetivo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("fkUsuario");

                    b.ToTable("Emprendimiento");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Estado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Inversor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("fkUsuario")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("fkUsuario")
                        .IsUnique();

                    b.ToTable("Inversor");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Ofertas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("ciudadid")
                        .HasColumnType("int");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("emprendimientoid")
                        .HasColumnType("int");

                    b.Property<int?>("estadoid")
                        .HasColumnType("int");

                    b.Property<int>("fkCiudad")
                        .HasColumnType("int");

                    b.Property<int>("fkEmprendimiento")
                        .HasColumnType("int");

                    b.Property<int>("fkEstado")
                        .HasColumnType("int");

                    b.Property<int>("fkTipoOferta")
                        .HasColumnType("int");

                    b.Property<int?>("tipoOfertaid")
                        .HasColumnType("int");

                    b.Property<int>("valor")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ciudadid");

                    b.HasIndex("emprendimientoid");

                    b.HasIndex("estadoid");

                    b.HasIndex("tipoOfertaid");

                    b.ToTable("Ofertas");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Rol", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("rol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Tarjeta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("CCV")
                        .HasColumnType("int");

                    b.Property<string>("fechaVencimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fkInversor")
                        .HasColumnType("int");

                    b.Property<string>("numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("fkInversor");

                    b.ToTable("Tarjeta");
                });

            modelBuilder.Entity("Infraestructure.API.Models.TipoIdentificacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("id");

                    b.ToTable("TipoIdentificacion");
                });

            modelBuilder.Entity("Infraestructure.API.Models.TipoOferta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("tipoOferta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("TipoOferta");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("fechaNacimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fkRol")
                        .HasColumnType("int");

                    b.Property<string>("identificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("fkRol");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Colaborador", b =>
                {
                    b.HasOne("Infraestructure.API.Models.Emprendimiento", "emprendimiento")
                        .WithMany("colaboradores")
                        .HasForeignKey("emprendimientoid");

                    b.Navigation("emprendimiento");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Emprendimiento", b =>
                {
                    b.HasOne("Infraestructure.API.Models.Usuario", "Usuario")
                        .WithMany("Emprendimientos")
                        .HasForeignKey("fkUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Inversor", b =>
                {
                    b.HasOne("Infraestructure.API.Models.Usuario", "Usuario")
                        .WithOne("Inversor")
                        .HasForeignKey("Infraestructure.API.Models.Inversor", "fkUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Ofertas", b =>
                {
                    b.HasOne("Infraestructure.API.Models.Ciudad", "ciudad")
                        .WithMany("ofertas")
                        .HasForeignKey("ciudadid");

                    b.HasOne("Infraestructure.API.Models.Emprendimiento", "emprendimiento")
                        .WithMany("ofertas")
                        .HasForeignKey("emprendimientoid");

                    b.HasOne("Infraestructure.API.Models.Estado", "estado")
                        .WithMany("ofertas")
                        .HasForeignKey("estadoid");

                    b.HasOne("Infraestructure.API.Models.TipoOferta", "tipoOferta")
                        .WithMany("ofertas")
                        .HasForeignKey("tipoOfertaid");

                    b.Navigation("ciudad");

                    b.Navigation("emprendimiento");

                    b.Navigation("estado");

                    b.Navigation("tipoOferta");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Tarjeta", b =>
                {
                    b.HasOne("Infraestructure.API.Models.Inversor", "Inversor")
                        .WithMany("Tarjetas")
                        .HasForeignKey("fkInversor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inversor");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Usuario", b =>
                {
                    b.HasOne("Infraestructure.API.Models.Rol", "Rol")
                        .WithMany("Usuario")
                        .HasForeignKey("fkRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Ciudad", b =>
                {
                    b.Navigation("ofertas");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Emprendimiento", b =>
                {
                    b.Navigation("colaboradores");

                    b.Navigation("ofertas");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Estado", b =>
                {
                    b.Navigation("ofertas");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Inversor", b =>
                {
                    b.Navigation("Tarjetas");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Rol", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Infraestructure.API.Models.TipoOferta", b =>
                {
                    b.Navigation("ofertas");
                });

            modelBuilder.Entity("Infraestructure.API.Models.Usuario", b =>
                {
                    b.Navigation("Emprendimientos");

                    b.Navigation("Inversor");
                });
#pragma warning restore 612, 618
        }
    }
}
